---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: kongpluginbindings.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    kind: KongPluginBinding
    listKind: KongPluginBindingList
    plural: kongpluginbindings
    singular: kongpluginbinding
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Kind of the plugin
      jsonPath: .spec.pluginReference.kind
      name: Plugin-kind
      type: string
    - description: Name of the plugin
      jsonPath: .spec.pluginReference.name
      name: Plugin-name
      type: string
    - description: The Resource is Programmed
      jsonPath: .status.conditions[?(@.type=='Programmed')].status
      name: Programmed
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KongPluginBinding is the schema for Plugin Bindings API which
          defines a Kong Plugin Binding.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: KongPluginBindingSpec defines specification of a KongPluginBinding.
            properties:
              consumerGroupRef:
                properties:
                  name:
                    description: Name is the name of the entity.
                    type: string
                required:
                - name
                type: object
              consumerRef:
                properties:
                  name:
                    description: Name is the name of the entity.
                    type: string
                required:
                - name
                type: object
              pluginRef:
                description: PluginReference is a reference to the KongPlugin or KongClusterPlugin
                  resource. It is required
                properties:
                  kind:
                    default: KongPlugin
                    description: kind can be KongPlugin or KongClusterPlugin. If not
                      set, it is assumed to be KongPlugin.
                    enum:
                    - KongPlugin
                    - KongClusterPlugin
                    type: string
                  name:
                    description: Name is the name of the KongPlugin or KongClusterPlugin
                      resource.
                    type: string
                required:
                - name
                type: object
              routeRef:
                description: |-
                  TODO(mlavacca): RouteReference allows references to KongRoute, Ingress, HTTPRoute, or GCPRoute resource.
                  TODO(mlavacca): ServiceReference allows Service or KongService resource.
                  TODO(mlavacca): In case the routeRef references a KongRoute, the ServiceRef should be unset or set to a KongService.
                  The same applies the other way around.
                properties:
                  group:
                    enum:
                    - ""
                    - core
                    - gateway.networking.k8s.io
                    - networking.k8s.io
                    type: string
                  kind:
                    enum:
                    - KongService
                    - KongRoute
                    - Service
                    - HTTPRoute
                    - GCPRoute
                    - Ingress
                    type: string
                  name:
                    description: Name is the name of the entity.
                    type: string
                required:
                - group
                - kind
                - name
                type: object
              serviceRef:
                description: 'TODO(mlavacca): add xvalidation between group and kind'
                properties:
                  group:
                    enum:
                    - ""
                    - core
                    - gateway.networking.k8s.io
                    - networking.k8s.io
                    type: string
                  kind:
                    enum:
                    - KongService
                    - KongRoute
                    - Service
                    - HTTPRoute
                    - GCPRoute
                    - Ingress
                    type: string
                  name:
                    description: Name is the name of the entity.
                    type: string
                required:
                - group
                - kind
                - name
                type: object
            required:
            - pluginRef
            type: object
          status:
            description: KongPluginBindingStatus represents the current status of
              the KongBinding resource.
            properties:
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Programmed
                description: Conditions describe the status of the Konnect entity.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              konnect:
                description: Konnect contains the Konnect entity status.
                properties:
                  controlPlaneID:
                    description: ControlPlaneID is the Konnect ID of the ControlPlane
                      this entity is associated with.
                    type: string
                  id:
                    description: |-
                      ID is the unique identifier of the Konnect entity as assigned by Konnect API.
                      If it's unset (empty string), it means the Konnect entity hasn't been created yet.
                    type: string
                  organizationID:
                    description: OrgID is ID of Konnect Org that this entity has been
                      created in.
                    type: string
                  serverURL:
                    description: ServerURL is the URL of the Konnect server in which
                      the entity exists.
                    type: string
                  serviceID:
                    description: ServiceID is the Konnect ID of the Service this entity
                      is associated with.
                    type: string
                type: object
            type: object
        required:
        - spec
        type: object
        x-kubernetes-validations:
        - message: The combination of entities set is not allowed
          rule: (has(self.spec.kong.consumerRef) && has(self.spec.kong.routeRef) &&
            has(self.spec.kong.serviceRef) && !has(self.spec.kong.consumerGroupRef))
            || (has(self.spec.kong.consumerGroupRef) && has(self.spec.kong.serviceRef)
            && has(self.spec.kong.routeRef) && !has(self.spec.kong.consumerRef)) ||
            (has(self.spec.kong.consumerRef) && has(self.spec.kong.routeRef) && !has(self.spec.kong.consumerGroupRef)
            && !has(self.spec.kong.serviceRef)) || (has(self.spec.kong.consumerRef)
            && has(self.spec.kong.serviceRef) && !has(self.spec.kong.routeRef) &&
            !has(self.spec.kong.consumerGroupRef)) || (has(self.spec.kong.consumerGroupRef)
            && has(self.spec.kong.routeRef) && !has(self.spec.kong.serviceRef) &&
            !has(self.spec.kong.consumerRef)) || (has(self.spec.kong.consumerGroupRef)
            && has(self.spec.kong.serviceRef) && !has(self.spec.kong.consumerRef)
            && !has(self.spec.kong.routeRef)) || (has(self.spec.kong.routeRef) &&
            has(self.spec.kong.serviceRef) && !has(self.spec.kong.consumerRef) &&
            !has(self.spec.kong.consumerGroupRef)) || (has(self.spec.kong.consumerRef)
            && !has(self.spec.kong.serviceRef) && !has(self.spec.kong.routeRef) &&
            !has(self.spec.kong.consumerGroupRef)) || (has(self.spec.kong.consumerGroupRef)
            && !has(self.spec.kong.serviceRef) && !has(self.spec.kong.routeRef) &&
            !has(self.spec.kong.consumerRef)) || (has(self.spec.kong.routeRef) &&
            !has(self.spec.kong.serviceRef) && !has(self.spec.kong.consumerRef) &&
            !has(self.spec.kong.consumerGroupRef)) || (has(self.spec.kong.serviceRef)
            && !has(self.spec.kong.routeRef) && !has(self.spec.kong.consumerGroupRef)
            && !has(self.spec.kong.consumerRef))
    served: true
    storage: true
    subresources:
      status: {}
