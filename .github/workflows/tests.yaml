name: Run tests
run-name: tests, branch:${{ github.ref_name }}, triggered by @${{ github.actor }}

concurrency:
  # Run only for most recent commit in PRs but for all tags and commits on main
  # Ref: https://docs.github.com/en/actions/using-jobs/using-concurrency
  group: ${{ github.workflow }}-${{ github.head_ref || github.sha }}
  cancel-in-progress: true

on:
  merge_group:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
      - 'release/*'
  push:
    branches:
      - 'main'
      - 'release/*'
    tags:
      - '*'
  workflow_dispatch: {}
  workflow_call: {}

permissions:
  contents: read

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - id: version
        run: |
          echo "version=$(head -1 VERSION)" >> "$GITHUB_OUTPUT"
      - name: Validate VERSION
        uses: booxmedialtd/ws-action-parse-semver@7784200024d6b3fc01253e617ec0168daf603de3 # v1.4.7
        with:
          input_string: ${{ steps.version.outputs.version }}
          version_extractor_regex: 'v(.*)$'

  ensure-actions-sha-pin:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - uses: zgosalvez/github-actions-ensure-sha-pinned-actions@9e9574ef04ea69da568d6249bd69539ccc704e74 # v4.0.0

  lint-actions:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - uses: jdx/mise-action@e3d7b8d67a7958d1207f6ed871e83b1ea780e7b0 # v3.3.1
      with:
        install: false

    - name: Run lint.actions
      run: make lint.actions

  lint-markdown:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - uses: jdx/mise-action@e3d7b8d67a7958d1207f6ed871e83b1ea780e7b0 # v3.3.1
      with:
        install: false

    - name: Run lint.markdownlint
      run: make lint.markdownlint

  test-unit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version-file: go.mod

    - uses: jdx/mise-action@e3d7b8d67a7958d1207f6ed871e83b1ea780e7b0 # v3.3.1
      with:
        install: false

    - name: Run tests
      run: make test.unit.pretty

  test-conversion:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version-file: go.mod

    - uses: jdx/mise-action@e3d7b8d67a7958d1207f6ed871e83b1ea780e7b0 # v3.3.1
      with:
        install: false

    - name: Run tests
      run: make test.conversion.pretty
      
  generate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version-file: go.mod

    - uses: jdx/mise-action@e3d7b8d67a7958d1207f6ed871e83b1ea780e7b0 # v3.3.1
      with:
        install: false

    - name: Generate
      run: make generate

    - name: Verify
      run: make verify.diff

  golangci-lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version-file: go.mod

    - uses: jdx/mise-action@e3d7b8d67a7958d1207f6ed871e83b1ea780e7b0 # v3.3.1
      with:
        install: false

    - env:
        # Our .golangci.yaml has fix: true, but we don't want that in CI therefore the below override.
        GOLANGCI_LINT_FLAGS: "--fix=false"
      run: make lint.golangci-lint

  kube-api-linter:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version-file: go.mod

    - uses: jdx/mise-action@e3d7b8d67a7958d1207f6ed871e83b1ea780e7b0 # v3.3.1
      with:
        install: false

    - run: make lint.api

  matrix_k8s_node_images:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - id: set-matrix
        run: |
          (
            echo 'matrix<<EOF'
            yq eval -o=json '.' .github/supported_k8s_node_images.yaml
            echo 'EOF'
          ) >> "${GITHUB_OUTPUT}"

  apply:
    runs-on: ubuntu-latest
    needs:
    - matrix_k8s_node_images
    strategy:
      matrix:
        include: ${{ fromJson(needs.matrix_k8s_node_images.outputs.matrix) }}

    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version-file: go.mod

    - uses: jdx/mise-action@e3d7b8d67a7958d1207f6ed871e83b1ea780e7b0 # v3.3.1
      with:
        install: false

    - name: Create k8s KinD Cluster
      uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
      with:
        # NOTE: default is 0.26.0 https://github.com/helm/kind-action/blob/a1b0e391336a6ee6713a0583f8c6240d70863de3/kind.sh#L21
        # so bump this manually
        version: v0.27.0
        node_image: ${{ matrix.node_image }}

    - name: Verify installing CRDs via kustomize works
      run: make install.only

    - name: Install and delete each sample one by one
      run: make test.samples

  CRDs-validation:
    runs-on: ubuntu-latest
    needs:
    - matrix_k8s_node_images
    strategy:
      matrix:
        include: ${{ fromJson(needs.matrix_k8s_node_images.outputs.matrix) }}

    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version-file: go.mod

    - uses: jdx/mise-action@e3d7b8d67a7958d1207f6ed871e83b1ea780e7b0 # v3.3.1
      with:
        install: false

    - name: Create k8s KinD Cluster
      uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
      with:
        # NOTE: default is 0.26.0 https://github.com/helm/kind-action/blob/a1b0e391336a6ee6713a0583f8c6240d70863de3/kind.sh#L21
        # so bump this manually
        version: v0.27.0
        node_image: ${{ matrix.node_image }}

    - name: Verify installing CRDs via kustomize works
      run: make install.only

    - name: Run the crds validation tests
      run: make test.crds-validation

  upgrade-crds-from-latest-release:
    runs-on: ubuntu-latest
    needs:
    - matrix_k8s_node_images
    strategy:
      matrix:
        include: ${{ fromJson(needs.matrix_k8s_node_images.outputs.matrix) }}

    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - uses: jdx/mise-action@e3d7b8d67a7958d1207f6ed871e83b1ea780e7b0 # v3.3.1
      with:
        install: false

    - name: Create k8s KinD Cluster
      uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
      with:
        # NOTE: default is 0.26.0 https://github.com/helm/kind-action/blob/a1b0e391336a6ee6713a0583f8c6240d70863de3/kind.sh#L21
        # so bump this manually
        version: v0.27.0
        node_image: ${{ matrix.node_image }}

    - run: make kustomize

    # TODO: Automate bumping the version here.
    - name: Install last release CRDs
      run: kustomize build github.com/kong/kubernetes-configuration/config/crd/gateway-operator\?ref=v1.4.2 | kubectl apply --server-side -f -

    - name: Install current CRDs
      run: make install.only

  # We need this step to fail the workflow if any of the previous steps failed or were cancelled.
  # It allows to use this particular job as a required check for PRs.
  # Ref: https://github.com/orgs/community/discussions/26822#discussioncomment-3305794
  passed:
    runs-on: ubuntu-latest
    needs:
      - ensure-actions-sha-pin
      - version
      - golangci-lint
      - kube-api-linter
      - lint-markdown
      - lint-actions
      - test-unit
      - generate
      - apply
      - CRDs-validation
      - upgrade-crds-from-latest-release
      - test-conversion
    if: always()
    steps:
      - if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
        run: |
          echo "Some jobs failed or were cancelled."
          exit 1
