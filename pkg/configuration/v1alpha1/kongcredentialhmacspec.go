/*
Copyright 2021 Kong, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	commonv1alpha1 "github.com/kong/kubernetes-configuration/v2/api/common/v1alpha1"
	v1 "k8s.io/api/core/v1"
)

// KongCredentialHMACSpecApplyConfiguration represents a declarative configuration of the KongCredentialHMACSpec type for use
// with apply.
type KongCredentialHMACSpecApplyConfiguration struct {
	ConsumerRef                                 *v1.LocalObjectReference `json:"consumerRef,omitempty"`
	KongCredentialHMACAPISpecApplyConfiguration `json:",inline"`
}

// KongCredentialHMACSpecApplyConfiguration constructs a declarative configuration of the KongCredentialHMACSpec type for use with
// apply.
func KongCredentialHMACSpec() *KongCredentialHMACSpecApplyConfiguration {
	return &KongCredentialHMACSpecApplyConfiguration{}
}

// WithConsumerRef sets the ConsumerRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ConsumerRef field is set to the value of the last call.
func (b *KongCredentialHMACSpecApplyConfiguration) WithConsumerRef(value v1.LocalObjectReference) *KongCredentialHMACSpecApplyConfiguration {
	b.ConsumerRef = &value
	return b
}

// WithID sets the ID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ID field is set to the value of the last call.
func (b *KongCredentialHMACSpecApplyConfiguration) WithID(value string) *KongCredentialHMACSpecApplyConfiguration {
	b.KongCredentialHMACAPISpecApplyConfiguration.ID = &value
	return b
}

// WithSecret sets the Secret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Secret field is set to the value of the last call.
func (b *KongCredentialHMACSpecApplyConfiguration) WithSecret(value string) *KongCredentialHMACSpecApplyConfiguration {
	b.KongCredentialHMACAPISpecApplyConfiguration.Secret = &value
	return b
}

// WithTags sets the Tags field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Tags field is set to the value of the last call.
func (b *KongCredentialHMACSpecApplyConfiguration) WithTags(value commonv1alpha1.Tags) *KongCredentialHMACSpecApplyConfiguration {
	b.KongCredentialHMACAPISpecApplyConfiguration.Tags = &value
	return b
}

// WithUsername sets the Username field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Username field is set to the value of the last call.
func (b *KongCredentialHMACSpecApplyConfiguration) WithUsername(value string) *KongCredentialHMACSpecApplyConfiguration {
	b.KongCredentialHMACAPISpecApplyConfiguration.Username = &value
	return b
}
